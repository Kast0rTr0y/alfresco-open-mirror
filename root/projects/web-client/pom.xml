<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.alfresco</groupId>
        <artifactId>alfresco-parent</artifactId>
        <version>5.1-SNAPSHOT</version>
        <relativePath>../../pom.xml</relativePath>
    </parent>
    <artifactId>alfresco-platform</artifactId>
    <packaging>war</packaging>
    <name>Alfresco Repository WAR Community</name>
    <description>Alfresco Web Client</description>

    <properties>
        <maven.tomcat.path>/alfresco</maven.tomcat.path>
        <maven.tomcat.port>${tomcat.default.alfresco.port}</maven.tomcat.port>
        <maven.tomcat.httpsPort>${tomcat.default.alfresco.ssl.port}</maven.tomcat.httpsPort>

        <runtime.data.folder>${basedir}/runtime</runtime.data.folder>
        <solr.config.folder>${runtime.data.folder}/solr4-instance</solr.config.folder>
        <!-- Filter solrcore.properties -->
        <ALFRESCO_SOLR4_DATA_DIR>${solr.config.folder}/data</ALFRESCO_SOLR4_DATA_DIR>
    </properties>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>alfresco-remote-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>alfresco-repository</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>fop</artifactId>
            <version>0.94</version>
            <exclusions>
                <exclusion>
                    <groupId>rhino</groupId>
                    <artifactId>js</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-jxpath</groupId>
            <artifactId>commons-jxpath</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-modeler</groupId>
            <artifactId>commons-modeler</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.james</groupId>
            <artifactId>apache-mime4j-dom</artifactId>
            <version>0.7.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avalon.framework</groupId>
            <artifactId>avalon-framework-api</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.avalon.framework</groupId>
            <artifactId>avalon-framework-impl</artifactId>
            <version>4.3.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.bcel</groupId>
            <artifactId>bcel</artifactId>
            <version>6.0-RC3</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-test-browser</artifactId>
            <version>${dependency.opencmis.version}</version>
        </dependency>

        <!-- 'provided' dependencies, not packaged in war -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet.jsp</groupId>
            <artifactId>jsp-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javax.portlet</groupId>
            <artifactId>portlet-api</artifactId>
            <version>2.0</version>
            <scope>provided</scope>
        </dependency>

       <dependency>
            <groupId>org.alfresco.services</groupId>
            <artifactId>alfresco-messaging-repo</artifactId>
            <version>1.2.5</version>
        </dependency>

        <!-- CORS Filter Libraries -->
        <dependency>
            <groupId>com.thetransactioncompany</groupId>
            <artifactId>cors-filter</artifactId>
            <version>1.9.3</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-core</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-repository</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.alfresco</groupId>
            <artifactId>alfresco-remote-api</artifactId>
            <version>${project.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.extensions.surf</groupId>
            <artifactId>spring-webscripts</artifactId>
            <version>${dependency.webscripts.version}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${dependency.spring.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.shale</groupId>
            <artifactId>shale-test</artifactId>
            <version>1.0.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <finalName>alfresco</finalName>
        <plugins>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <!-- Extract version.properties, for convenience -->
                    <execution>
                        <id>fetch-version-properties</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>alfresco-repository</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <includes>alfresco/version.properties</includes>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                    <!-- CLOUD-1967 Put core log4j config in WEB-INF/classes, so that it's first in classloader -->
                    <execution>
                        <id>fetch-log4j-config</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>unpack</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>${project.groupId}</groupId>
                                    <artifactId>alfresco-core</artifactId>
                                    <version>${project.version}</version>
                                </artifactItem>
                            </artifactItems>
                            <includes>log*.properties</includes>
                            <outputDirectory>${project.build.outputDirectory}</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions> 
                    <!-- ACE-2318 Bring alfresco-jmxrmi.* from repository -->
                    <execution>
                        <id>fetch-jmxrmi-properties</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy todir="${project.build.outputDirectory}/alfresco">
                                    <fileset dir="${basedir}/../repository/config/alfresco" includes="alfresco-jmxrmi.*" />
                                </copy>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- NonSSL war: Replaces web.xml where applicable, commenting out the security-constraints -->
            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>replacer</artifactId>
                <executions>
                    <execution>
                        <id>disable-securecomms</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>${basedir}/source/web/WEB-INF/web.xml</file>
                    <outputFile>${project.build.directory}/nossl/web.xml</outputFile>
                    <replacements>
                        <replacement>
                            <token><![CDATA[<!-- Toggle securecomms placeholder start -->]]></token>
                            <value><![CDATA[<!-- ]]></value>
                        </replacement>
                        <replacement>
                            <token><![CDATA[<!-- Toggle securecomms placeholder end -->]]></token>
                            <value><![CDATA[--> ]]></value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <!-- This allows overlays to be prepared on the FS for minification and faster run -->
                <executions>
                    <execution>
                        <id>pre-exploded-war</id>
                        <goals>
                            <goal>exploded</goal>
                        </goals>
                        <phase>prepare-package</phase>
                    </execution>
                    <!-- Another execution of the war plugin with non-SSL web.xml -->
                    <execution>
                        <id>nossl-war</id>
                        <goals>
                            <goal>war</goal>
                        </goals>
                        <configuration>
                            <webXml>${project.build.directory}/nossl/web.xml</webXml>
                            <classifier>nossl</classifier>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
                Configure the Tomcat plugin. Keeping the configuration separate from the 'run' profile,
                allows explicit running of tomcat, e.g: mvn tomcat7:run-war-only
            -->
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>${dependency.postgresql.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>${dependency.mysql.version}</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <systemProperties>
                        <dir.root>${runtime.data.folder}/alf_data</dir.root>
                        <index.subsystem.name>solr4</index.subsystem.name>
                        <solr.host>localhost</solr.host>
                        <solr.secureComms>none</solr.secureComms>
                        <solr.port>8080</solr.port>
                        <solr.port.ssl></solr.port.ssl>
                        <solr.backup.alfresco.numberToKeep>0</solr.backup.alfresco.numberToKeep>
                        <solr.backup.archive.numberToKeep>0</solr.backup.archive.numberToKeep>
                        <solr.solr.home>${solr.config.folder}</solr.solr.home>
                        <solr.solr.model.dir>${solr.config.folder}/alfrescoModels</solr.solr.model.dir>
                        <solr.solr.content.dir>${solr.config.folder}/content</solr.solr.content.dir>
                    </systemProperties>
                    <delegate>false</delegate>
                    <useSeparateTomcatClassLoader>true</useSeparateTomcatClassLoader>
                    <contextFile>${basedir}/tomcat/alfresco-context.xml</contextFile>
                    <tomcatUsers>${basedir}/tomcat/tomcat-users.xml</tomcatUsers>
                    <webapps>
                        <!-- Run solr4 alongside the repo -->
                        <webapp>
                            <groupId>org.alfresco</groupId>
                            <artifactId>alfresco-solr4</artifactId>
                            <version>${project.version}</version>
                            <contextPath>/solr4</contextPath>
                            <type>war</type>
                            <asWebapp>true</asWebapp>
                            <contextFile>${basedir}/tomcat/solr-context.xml</contextFile>
                        </webapp>
                    </webapps> 
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>run</id>
            <build>
                <plugins>
                    <!-- Create tomcat/shared/classes/alfresco-global.properties -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-antrun-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>create-alfresco-global-properties</id>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <target>
                                        <mkdir dir="${basedir}/tomcat/shared/classes"/>
                                        <copy file="${basedir}/tomcat/alfresco-global.properties.template"
                                            tofile="${basedir}/tomcat/shared/classes/alfresco-global.properties" />
                                    </target>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <!-- Download and unpack the solr4 config zip file -->
                    <plugin>
                      <groupId>org.apache.maven.plugins</groupId>
                      <artifactId>maven-dependency-plugin</artifactId>
                      <executions>
                        <execution>
                          <id>unpack-solr4-config</id>
                          <phase>generate-resources</phase>
                          <goals>
                            <goal>unpack</goal>
                          </goals>
                          <configuration>
                            <outputDirectory>${project.build.directory}/solr4</outputDirectory>
                            <artifactItems>
                              <artifactItem>
                                <groupId>org.alfresco</groupId>
                                <artifactId>alfresco-solr4</artifactId>
                                <version>${project.version}</version>
                                <classifier>config</classifier>
                                <overWrite>true</overWrite>
                                <type>zip</type>
                              </artifactItem>
                            </artifactItems>
                          </configuration>
                        </execution>
                      </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-resources-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>filter-copy-solr4-config</id>
                                <goals>
                                    <goal>copy-resources</goal>
                                </goals>
                                <phase>generate-resources</phase>
                                <configuration>
                                    <outputDirectory>${solr.config.folder}</outputDirectory>
                                    <resources>
                                        <resource>
                                            <directory>${project.build.directory}/solr4</directory>
                                            <excludes>
                                                <exclude>workspace-SpacesStore/conf/solrcore.properties</exclude>
                                                <exclude>archive-SpacesStore/conf/solrcore.properties</exclude>
                                            </excludes>
                                            <filtering>false</filtering>
                                        </resource>
                                        <resource>
                                            <directory>${project.build.directory}/solr4</directory>
                                            <includes>
                                                <include>workspace-SpacesStore/conf/solrcore.properties</include>
                                                <include>archive-SpacesStore/conf/solrcore.properties</include>
                                            </includes>
                                            <filtering>true</filtering>
                                        </resource>
                                    </resources>
                                    <useDefaultDelimiters>false</useDefaultDelimiters>
                                    <delimiters>
                                        <delimiter>@@</delimiter>
                                    </delimiters>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.tomcat.maven</groupId>
                        <artifactId>tomcat7-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>run-exploded-webapp</id>
                                <phase>prepare-package</phase>
                                <goals>
                                    <goal>run</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
            Use "mvn initialize -Ppurge" to drop repo, solr and DB data, then re-create an empty DB.
            Or use with a later phase to build and start a fresh repo all in one go, e.g.
            "mvn [clean] install -Ppurge,run"
          -->
        <profile>
            <id>purge</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>delete-runtime-folders</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                                <configuration>
                                    <excludeDefaultDirectories>true</excludeDefaultDirectories>
                                    <filesets>
                                        <fileset>
                                            <directory>${runtime.data.folder}</directory>
                                        </fileset>
                                    </filesets>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>drop-db</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip><!-- always run -->
                                    <sqlCommand>${db.drop.command}</sqlCommand>
                                </configuration>
                            </execution>
                            <execution>
                                <id>create-db</id>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                                <configuration>
                                    <skip>false</skip><!-- always run -->
                                    <sqlCommand>${db.create.command}</sqlCommand>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>


      <profile>
         <id>integration-tests</id>
         <activation>
             <activeByDefault>false</activeByDefault>
         </activation>
         <build>
             <plugins>
                 <!-- Wipe the database before starting tests -->
                 <plugin>
                     <groupId>org.codehaus.mojo</groupId>
                     <artifactId>sql-maven-plugin</artifactId>
                     <executions>
                         <execution>
                             <id>wipe-database</id>
                             <phase>pre-clean</phase>
                             <goals>
                                 <goal>execute</goal>
                             </goals>
                             <configuration>
                                 <sqlCommand>${db.drop.command}</sqlCommand>
                             </configuration>
                         </execution>
                         <execution>
                             <id>create-database</id>
                             <phase>pre-clean</phase>
                             <goals>
                                 <goal>execute</goal>
                             </goals>
                             <configuration>
                                 <sqlCommand>${db.create.command}</sqlCommand>
                             </configuration>
                         </execution>
                     </executions>
                 </plugin>
                 <plugin>
                     <artifactId>maven-surefire-plugin</artifactId>
                     <executions>
                        <execution>
                           <id>integration-tests</id>
                           <goals>
                              <goal>test</goal>
                           </goals>
                           <configuration>
                             <includes>
                               <include>**/FormUIGetRestApiIT.java</include>
                             </includes>
                           </configuration>
                        </execution>
                     </executions>
                 </plugin>
             </plugins>
         </build>
      </profile>
        <!-- Tweaks required to make the build work in Eclipse -->
        <profile>
            <id>m2e</id>
            <dependencies>
                <dependency>
                   <groupId>commons-logging</groupId>
                   <artifactId>commons-logging</artifactId>
                   <!-- This is needed for Maven tomcat run -->
                   <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>mysql</groupId>
                    <artifactId>mysql-connector-java</artifactId>
                </dependency>            
            </dependencies>
       </profile>
    </profiles>   
</project>
