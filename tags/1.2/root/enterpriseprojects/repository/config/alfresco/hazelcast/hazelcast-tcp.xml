<?xml version="1.0" encoding="UTF-8"?>
<hazelcast xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-basic.xsd"
           xmlns="http://www.hazelcast.com/schema/config"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <group>
        <name>Alfresco Repository</name>
        <password>${alfresco.hazelcast.password}</password>
    </group>
    
    <management-center enabled="${alfresco.hazelcast.mancenter.enabled}">
        ${alfresco.hazelcast.mancenter.url}
    </management-center>
    
    <network>
        <port auto-increment="${alfresco.hazelcast.autoinc.port}">${alfresco.hazelcast.port}</port>
        <join>
            <multicast enabled="false">
                <multicast-group>224.2.2.3</multicast-group>
                <multicast-port>54327</multicast-port>
            </multicast>
            <tcp-ip enabled="true">
                <members></members>
            </tcp-ip>
             <aws enabled="false">
                <access-key>my-access-key</access-key>
                <secret-key>my-secret-key</secret-key>
                <!--optional, default is us-east-1 -->
                <region>us-west-1</region>                              
                <!-- optional, only instances belonging to this group will be discovered, default will try all running instances -->
                <security-group-name>hazelcast-sg</security-group-name> 
                <tag-key>type</tag-key>                         
                <tag-value>hz-nodes</tag-value>                 
            </aws>
        </join>
        <interfaces enabled="${alfresco.cluster.specify.interface}">
            <interface>${alfresco.cluster.interface}</interface>
        </interfaces>
        <symmetric-encryption enabled="false">
            <!--
               encryption algorithm such as
               DES/ECB/PKCS5Padding,
               PBEWithMD5AndDES,
               AES/CBC/PKCS5Padding,
               Blowfish,
               DESede
            -->
            <algorithm>PBEWithMD5AndDES</algorithm>
            <!-- salt value to use when generating the secret key -->
            <salt>thesalt</salt>
            <!-- pass phrase to use when generating the secret key -->
            <password>thepass</password>
            <!-- iteration count to use when generating the secret key -->
            <iteration-count>19</iteration-count>
        </symmetric-encryption>
        <asymmetric-encryption enabled="false">
            <!-- encryption algorithm -->
            <algorithm>RSA/NONE/PKCS1PADDING</algorithm>
            <!-- private key password -->
            <keyPassword>thekeypass</keyPassword>
            <!-- private key alias -->
            <keyAlias>local</keyAlias>
            <!-- key store type -->
            <storeType>JKS</storeType>
            <!-- key store password -->
            <storePassword>thestorepass</storePassword>
            <!-- path to the key store -->
            <storePath>keystore</storePath>
        </asymmetric-encryption>
    </network>
    <executor-service>
        <core-pool-size>16</core-pool-size>
        <max-pool-size>64</max-pool-size>
        <keep-alive-seconds>60</keep-alive-seconds>
    </executor-service>
    <queue name="default">
        <max-size-per-jvm>0</max-size-per-jvm>
        <backing-map-ref>default</backing-map-ref>
    </queue>
    <map name="default">
        <backup-count>1</backup-count>
        <time-to-live-seconds>0</time-to-live-seconds>
        <max-idle-seconds>0</max-idle-seconds>
        <eviction-policy>LRU</eviction-policy>
        <max-size policy="cluster_wide_map_size">4000</max-size>
        <eviction-percentage>25</eviction-percentage>
        <merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
    </map>

     <map name="AlfrescoFilesysCache">
        <backup-count>1</backup-count>
        <eviction-policy>NONE</eviction-policy>
        <max-size>0</max-size>
        <eviction-percentage>25</eviction-percentage>
        <merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
    </map>

    
    <!-- Ephemeral lock store map definition -->
    <map name="lockStore">
        <backup-count>1</backup-count>
        <!-- No overall size limit, since this would result in ephemeral locks being evicted. -->
        <eviction-policy>NONE</eviction-policy>
        <eviction-percentage>0</eviction-percentage>
        <merge-policy>hz.ADD_NEW_ENTRY</merge-policy>
        <max-size policy="cluster_wide_map_size">0</max-size>
        <!--
           TTL here must match LockServiceImpl.MAX_EPHEMERAL_LOCK_SECONDS
           
           TODO: move to injected property here and elsewhere that the constant is used.
        -->
        <time-to-live-seconds>172800</time-to-live-seconds>
        <max-idle-seconds>0</max-idle-seconds>
    </map>
    
    <properties>
        <property name="hazelcast.logging.type">log4j</property>
        <property name="hazelcast.rest.enabled">false</property>
        <property name="hazelcast.memcache.enabled">false</property>
        <property name="hazelcast.max.operation.timeout">20000</property>
        <property name="hazelcast.max.no.heartbeat.seconds">${alfresco.hazelcast.max.no.heartbeat.seconds}</property>
        <property name="hazelcast.socket.bind.any">${alfresco.hazelcast.bind.any}</property>
    </properties>
</hazelcast>
