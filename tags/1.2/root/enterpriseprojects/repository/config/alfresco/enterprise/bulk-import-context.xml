<?xml version='1.0' encoding='UTF-8'?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/util
                           http://www.springframework.org/schema/util/spring-util-3.0.xsd">  

  <!-- Public beans for the bulk filesystem importer that can be overridden in a custom context file located in alfresco/extension -->

  <!-- Content in place -->

  <!-- Supports the ability to import inside the various stores configured by the content store selector, -->
  <!-- or the default one if none is configured. -->
  <bean id="storeSelectorMapProvider" class="org.alfresco.enterprise.repo.bulkimport.impl.stores.StoreSelectorContentStoreMapProvider">
    <property name="contentStore">
      <ref bean="storeSelectorContentStore" />
    </property>
  </bean>

  <bean id="inPlaceNodeImporterFactory" class="org.alfresco.enterprise.repo.bulkimport.impl.InPlaceNodeImporterFactory" parent="abstractNodeImporterFactory">
      <property name="contentDataFactory" ref="bfsiContentDataFactory" />
      <!-- the default store name, should match the default store defined by the content store selector aspect. -->
      <!-- this is not to be confused with an override of where the content would go by default. -->
      <!-- this property will be used to determine whether or not the cm:storeSelector aspect should be added to a particular node; -->
      <!-- that is, if the requested content store is different that this the aspect will be applied, setting the store name to the -->
      <!-- requested store name -->
      <property name="defaultStoreName"   value="default" />
      <property name="storeMapProvider"   ref="storeSelectorMapProvider" />
  </bean>
</beans>