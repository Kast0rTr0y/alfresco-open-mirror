<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC '-//SPRING//DTD BEAN//EN' 'http://www.springframework.org/dtd/spring-beans.dtd'>

<beans>

    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/module-schema-context.xml"/>

    <!--                   -->
    <!--  General          -->
    <!--                   -->
    
    <!-- Thor override: do not apply any modules to tenants (eg. this module, analytics module etc) -->
    
    <bean id="moduleService" class="org.alfresco.repo.module.ModuleServiceImpl">
       <property name="serviceRegistry" ref="ServiceRegistry" />
       <property name="descriptorService" ref="DescriptorService" />
       <property name="registryService" ref="RegistryService" />
       <property name="tenantAdminService" ref="tenantAdminService" />
    </bean>
    
    <!-- Bootstrap the Accounts workflow model(s) -->
    <bean id="org_alfresco_module_cloud_dictionaryBootstrap" parent="dictionaryModelBootstrap" depends-on="dictionaryBootstrap">
        <property name="models">
            <list>
                <value>alfresco/module/org_alfresco_module_cloud/bootstrap/cloudModel.xml</value>
                <value>alfresco/workflow/account-self-signup-workflow-model.xml</value>
                <value>alfresco/workflow/cloud-site-invitation-workflow-model.xml</value>
                <value>alfresco/workflow/reset-password-workflow-model.xml</value>
            </list>
        </property>
    </bean>
    
    <bean id="cloudWorkflowsBootstrap" parent="workflowDeployer">
        <property name="workflowDefinitions">
            <list>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/workflow/account-self-signup_processdefinition.bpmn20.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/workflow/cloud-site-invitation_processdefinition.bpmn20.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/workflow/reset-password_processdefinition.bpmn20.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
            </list>
        </property>
        <property name="models">
            <list>
               <value>alfresco/workflow/account-self-signup-workflow-model.xml</value>
               <value>alfresco/workflow/cloud-site-invitation-workflow-model.xml</value>
               <value>alfresco/workflow/reset-password-workflow-model.xml</value>
            </list>
        </property>
        <property name="labels">
            <list>
               <value>alfresco/workflow/account-self-signup-workflow-messages</value>
               <value>alfresco/workflow/cloud-site-invitation-workflow-messages</value>
               <value>alfresco/workflow/reset-password-workflow-messages</value>
            </list>
        </property>
    </bean>
    
    <bean id="cloudBootstrap" class="org.alfresco.module.org_alfresco_module_cloud.CloudBootstrap">
        <property name="QNameDAO" ref="qnameDAO" />
    </bean>
    
    <bean id="cloudPersonService" class="org.alfresco.module.org_alfresco_module_cloud.users.CloudPersonServiceImpl">
        <property name="personService" ref="PersonService"/>
        <property name="nodeService" ref="NodeService"/>
        <property name="directoryService" ref="directoryService"/>
        <property name="permissionServiceSPI" ref="permissionServiceImpl"/>
        <property name="authorityService" ref="authorityService" />
    </bean>
    
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-mt-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/email-address-service-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/account-service-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/account-admin-service-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/registration-service-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/reset-password-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-invitation-service-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/network-admin-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-saml-service-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/rest-api-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-usage-quota-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-cache-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-disabled-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/remote-transform-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/remote-transform-server-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-webdav-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/cloud-aos-context.xml"/>
    <import resource="classpath*:alfresco/module/org_alfresco_module_cloud/aws-context.xml"/>
    <import resource="classpath*:alfresco/module/org_alfresco_module_cloud/analytics-service-context.xml"/>
    <import resource="classpath*:alfresco/module/org_alfresco_module_cloud/site-services-context.xml"/>
    <import resource="classpath:alfresco/module/org_alfresco_module_cloud/metrics-context.xml"/>

    <!-- Make sure that the S3 connector beans get loaded AFTER cloud-mt-context.xml, so the content store bean is overridden -->
    <import resource="classpath*:alfresco/module/org_alfresco_integrations_s3store/module-context.xml"/>

    <!-- MyBatis config for Cloud (using common datasource) -->
    <bean id="cloudSqlSessionFactory" class="org.alfresco.ibatis.HierarchicalSqlSessionFactoryBean">
        <property name="resourceLoader" ref="dialectResourceLoader"/>
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation">
            <value>classpath:alfresco/module/org_alfresco_module_cloud/ibatis/cloud-SqlMapConfig.xml</value>
        </property>
    </bean>
    <bean id="cloudSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="cloudSqlSessionFactory"/>
    </bean>
    <bean id="cloudCannedQueryDAO" class="org.alfresco.repo.domain.query.ibatis.CannedQueryDAOImpl" init-method="init">
        <property name="sqlSessionTemplate" ref="cloudSqlSessionTemplate"/>
        <property name="controlDAO" ref="controlDAO"/>  <!-- Not used -->
    </bean>
   
    
    
    <!-- THOR-927: perf tweak - override authorityService (authority-services-context.xml) - treats "admin" (including re-map of "admin@tenant") as an implicit admin authority -->
    <bean id="authorityService" class="org.alfresco.module.org_alfresco_module_cloud.authentication.CloudAuthorityServiceImpl">
        <property name="MTTenantService" ref="tenantService"/>
        <property name="personService">
            <ref bean="personService" />
        </property>
        <property name="tenantService">
            <ref bean="tenantService"/>
        </property>
        <property name="authorityDAO">
            <ref bean="authorityDAO" />
        </property>
        <property name="userNameMatcher">
            <ref bean="userNameMatcher" />
        </property>
        <property name="authenticationService">
            <ref bean="authenticationService" />
        </property>
        <property name="permissionServiceSPI">
            <ref bean="permissionServiceImpl" />
        </property>
        <property name="adminGroups">
            <set>
                <value>ALFRESCO_ADMINISTRATORS</value>
            </set>
        </property>
        <property name="guestGroups">
            <set>
            </set>
        </property>
    </bean>
    
    <!-- override/extend peopleScript (script-services-context.xml) -->
    <bean id="peopleScript" parent="baseJavaScriptExtension" class="org.alfresco.module.org_alfresco_module_cloud.person.jscript.CloudPeople">
        <property name="extensionName">
            <value>people</value>
        </property>
        <property name="storeUrl">
            <value>${spaces.store}</value>
        </property>
        <property name="serviceRegistry">
            <ref bean="ServiceRegistry"/>
        </property>
        <property name="authorityDAO">
            <ref bean="authorityDAO"/>
        </property>
        <property name="authorityService">
            <ref bean="AuthorityService"/>
        </property>
        <property name="personService">
            <ref bean="PersonService"/>
        </property>
        <property name="cloudPersonService">
            <ref bean="cloudPersonService"/>
        </property>
        <property name="authenticationService">
            <ref bean="AuthenticationService"/>
        </property>
        <property name="contentUsageService">
            <ref bean="ContentUsageService"/>
        </property>
        <property name="tenantService">
            <ref bean="tenantService"/>
        </property>
        <property name="userNameGenerator">
            <ref bean="userNameGenerator"/>
        </property>
        <property name="userRegistrySynchronizer" ref="userRegistrySynchronizer" />
        <property name="cloudSiteService" ref="siteService" />
        <property name="directoryService" ref="directoryService"/>
        <property name="accountService" ref="AccountService"/>
    </bean>
    
    <!-- override/extend peopleTemplateExtension (template-services-context.xml) -->
    <bean id="peopleTemplateExtension" parent="baseTemplateImplementation" class="org.alfresco.module.org_alfresco_module_cloud.person.template.CloudPeople">
        <property name="extensionName">
            <value>people</value>
        </property>
        <property name="storeUrl">
            <value>${spaces.store}</value>
        </property>
        <property name="serviceRegistry">
            <ref bean="ServiceRegistry"/>
        </property>
        <property name="authorityDAO">
            <ref bean="authorityDAO"/>
        </property>
        <property name="authorityService">
            <ref bean="AuthorityService"/>
        </property>
        <property name="personService">
            <ref bean="PersonService"/>
        </property>
        <property name="cloudPersonService">
            <ref bean="cloudPersonService"/>
        </property>
        <property name="authenticationService">
            <ref bean="AuthenticationService"/>
        </property>
        <property name="directoryService" ref="directoryService"/>
        <property name="accountService" ref="AccountService"/>
   </bean>

   <bean id="syncPermissionsChecker" class="org.alfresco.module.org_alfresco_module_cloud.sync.SyncPermissionsChecker">
      <property name="authorityService" ref="AuthorityService" />
      <property name="nodeService" ref="NodeService" />
      <property name="cloudPersonService" ref="cloudPersonService" />
   </bean>
   
   <bean id="syncAdminService" parent="baseSyncAdminService" class="org.alfresco.module.org_alfresco_module_cloud.sync.CloudSyncAdminServiceImpl" >
      <property name="syncPermissionsChecker" ref="syncPermissionsChecker"/>
      <property name="accountService" ref="AccountService"/>
      <property name="minAllowedAccountTypeId" value="${sync.cloud.minAllowedAccountTypeId}"/>
   </bean>
    
    <!--  Do not persist properties; ensures cloud is always configured from known file based config files -->
    <bean id="propertyBackedBeanExporter" class="org.alfresco.enterprise.repo.management.subsystems.PropertyBackedBeanExporter">
        <property name="jmxExporter" ref="dynamicExporter" />
        <property name="registry">
            <ref bean="propertyBackedBeanRegistry" />
        </property>
        <property name="transactionService" ref="transactionService" />
        <property name="attributeService"><bean class="org.alfresco.repo.attributes.NoopAttributeServiceImpl"/></property>
        <property name="messengerFactory" ref="messengerFactory"/>
    </bean>
    
     <!-- Hybrid workflows -->
   <bean id="simpleTaskHybridWorkflowHandler" class="org.alfresco.module.org_alfresco_module_cloud.workflow.SimpleTaskHybridWorkflowHandler" >
      <property name="serviceRegistry" ref="ServiceRegistry" />
   </bean>
   
   <bean id="reviewHybridWorkflowHandler" class="org.alfresco.module.org_alfresco_module_cloud.workflow.ReviewHybridWorkflowHandler" >
      <property name="serviceRegistry" ref="ServiceRegistry" />
   </bean>
   
   <bean id="hybridAspect" class="org.alfresco.module.org_alfresco_module_cloud.workflow.HybridWorkflowCloudAspect" init-method="init">
      <property name="policyComponent" ref="policyComponent" />
      <property name="workflowService" ref="workflowServiceImpl" />
      <property name="activitiProcessEngine" ref="activitiProcessEngine" />
      <property name="nodeService" ref="nodeService" />
      <property name="namespaceService" ref="namespaceService" />
      <property name="typeHandlers">
         <list>
            <ref bean="simpleTaskHybridWorkflowHandler" />
            <ref bean="reviewHybridWorkflowHandler" />
         </list>
      </property>
      <property name="storesToIgnore">
         <list>
            <value>${version.store.version2Store}</value>
         </list>
      </property>
   </bean>
   
   <bean id="hybridWorkflowCleanupListener" class="org.alfresco.module.org_alfresco_module_cloud.workflow.HybridWorkflowCleanupListener" parent="baseExecutionListener">
       <property name="hybridAspect" ref="hybridAspect" />
   </bean>
   
   <bean id="hybridWorkflowsBootstrap" parent="workflowDeployer">
        <property name="workflowDefinitions">
            <list>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/workflow/hybrid-review.bpmn20.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
                <props>
                    <prop key="engineId">activiti</prop>
                    <prop key="location">alfresco/workflow/hybrid-adhoc.bpmn20.xml</prop>
                    <prop key="mimetype">text/xml</prop>
                    <prop key="redeploy">false</prop>
                </props>
            </list>
        </property>
   </bean>
   
   <!-- override NodeArchiveService -->
   <!-- Wrapper component to handle restore and purge of archived nodes -->
   <bean id="nodeArchiveService" class="org.alfresco.module.org_alfresco_module_cloud.repo.archive.CloudNodeArchiveServiceImpl" init-method="init" >
      <property name="nodeService">
         <ref bean="NodeService"/>
      </property>
      <property name="permissionService">
         <ref bean="permissionService"/>
      </property>
      <property name="transactionService">
         <ref bean="transactionService"/>
      </property>
      <property name="jobLockService">
         <ref bean="jobLockService"/>
      </property>
      <property name="authorityService">
         <ref bean="authorityService"/>
      </property>
      <property name="policyComponent" ref="policyComponent"/>
      <property name="cannedQueryRegistry">
         <ref bean="archivedNodesCannedQueryRegistry"/>
      </property>
      <property name="personService">
         <ref bean="personService" />
      </property>
            <property name="tenantService">
         <ref bean="tenantService"/>
      </property>
      <property name="userNamesAreCaseSensitive">
         <value>${user.name.caseSensitive}</value>
      </property>
   </bean>
   
   <!-- override SolrFacetService -->
    <bean id="solrFacetService" class="org.alfresco.module.org_alfresco_module_cloud.solr.facet.CloudSolrFacetServiceImpl">
        <property name="nodeService" ref="nodeService" />
        <property name="authorityService" ref="authorityService" />
        <property name="namespaceService" ref="namespaceService" />
        <property name="searchService" ref="SearchService" />
        <property name="retryingTransactionHelper" ref="retryingTransactionHelper" />
        <property name="behaviourFilter" ref="policyBehaviourFilter" />
        <property name="policyComponent" ref="policyComponent" />
        <property name="repositoryHelper" ref="repositoryHelper" />
        <property name="facetConfig" ref="solrFacetConfigs" />
        <property name="singletonCache" ref="immutableSingletonCache" />
        <property name="facetNodeRefCache" ref="solrFacetNodeRefCache" />
        <property name="personService" ref="personService" />
        <property name="facetsRootXPath">
            <value>${solr_facets.root}</value>
        </property>
        <property name="facetsRootChildName" value="${spaces.solr_facets.root.childname}" />

        <!-- Properties for bootstrapping the SOLR Facets folder -->
        <property name="importerBootstrap" ref="spacesBootstrap" />
        <property name="bootstrapView">
            <props>
                <prop key="path">${solr_facets.root.path}</prop>
                <prop key="location">alfresco/bootstrap/solrFacetsRootFolder.xml</prop>
                <prop key="messages">alfresco/messages/bootstrap-spaces</prop>
            </props>
        </property>
    </bean>
   
</beans>
