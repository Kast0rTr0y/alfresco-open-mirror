<alfresco-config>

   <config evaluator="string-compare" condition="WebFramework">
   
      <web-framework>
      
         <!--  Override the default Spring Surf configuration to use AdvancedComponentImpl
               instead of ComponentImpl. This will mean that SubComponents are used for
               rendering rather than Components. This enables Share for greater extensibility -->
         <object-type>
             <id>component</id>
             <version>1.0</version>
             <name>Component</name>
             <description>Component</description>
             <namespace></namespace>
             <class>org.springframework.extensions.surf.types.AdvancedComponentImpl</class>
         </object-type>
         
         <!-- Configure Surf Defaults -->
         <defaults>
            <!-- Service Overrides -->
            <page-mapper-factory>webframework.factory.pagemapper.slingshot</page-mapper-factory>
            
            <!-- 
               The slingshot user factory has been replaced by a TenantUserFactory. This is required because
               Tenant users contain additional tennant data. 
               <user-factory>webframework.factory.user.slingshot</user-factory>
             -->
            <user-factory>webframework.factory.user.tenant</user-factory>
            
            <!-- Setting Overrides -->
            <site-configuration>slingshot.site.configuration</site-configuration>
            <region-chrome>slingshot-region-chrome</region-chrome>
            <!-- no chrome required for components -->
            <component-chrome></component-chrome>
            
            <!-- Slingshot specific page types -->
            <page-type>
               <id>login</id>
               <page-instance-id>slingshot-login</page-instance-id>
            </page-type>
            <page-type>
               <id>logout</id>
               <page-instance-id>slingshot-logout</page-instance-id>
            </page-type>
            
            <!-- theme - currently one of: default, greenTheme, hcBlack -->
            <theme>default</theme>
         </defaults>
         
         <error-handler>
            <id>region-nocomponent</id>
            <processor-id>nocomponent</processor-id>        
         </error-handler>
         <error-handler>
             <id>page-error</id>
             <processor-id>jsp</processor-id>
             <uri>/error500.jsp</uri>
         </error-handler>
         
         <!-- Autowire Runtime Settings -->
         <autowire>
            <!-- Pick the runtime: classpath, webapp, local, alfresco -->               
            <runtime>alfresco</runtime>
            
            <!-- Pick the mode: development, production -->             
            <mode>production</mode>
         </autowire>

         <module-deployment>
             <mode>manual</mode>
         </module-deployment>

         <!--
            Stops cached client side resources from being stale after a release by adding a checksum to the url
            for resources requested using <@script> & <@link> tags
         -->
         <use-checksum-dependencies>true</use-checksum-dependencies>
         <aggregate-dependencies>false</aggregate-dependencies>
         <calculate-webscript-dependencies>true</calculate-webscript-dependencies>
         <generate-css-data-images>true</generate-css-data-images>
         
         <!-- Disabling the resource caching will result in caches being cleared for each request that goes through
              the ProcessJsonModelDirective. Primarily this is will ensure clean caches for every Aikau based request
              so if there are no Aikau Components on the page then this will have no effect on caches. However, this 
              should be sufficient for most cases since the Share header component is Aikau based so should apply
              to every Share page (see https://issues.alfresco.com/jira/browse/ALF-21060 for context) -->
         <disable-resource-caching>false</disable-resource-caching>

         <enable-remote-resource-resolving>false</enable-remote-resource-resolving>

         <!-- This is the Dojo configuration settings for Surf -->
         <dojo-pages>
            <!-- This indicates that Dojo page support is on - this means that the Dojo
                 dependency handler bean will be checked by the ResourceController and that
                 the relevant FreeMarker directives will be made available to WebScripts -->
            <enabled>true</enabled>

            <!-- This determines whether or not the loader trace is on or off -->
            <loader-trace-enabled>false</loader-trace-enabled>

            <!-- This is the file that will be loaded when Dojo is bootstrapped -->
            <bootstrap-file>/res/js/lib/dojo-1.9.0/dojo/dojo.js</bootstrap-file>

            <!-- This is the widget that will be used to load the page -->
            <page-widget>alfresco/core/Page</page-widget>

            <!-- The following data is used to bootstrap Dojo when it is loaded -->
            <base-url>/res/</base-url>

            <!-- Use the default LESS configuration from Aikau -->
            <default-less-configuration>/js/aikau/1.0/alfresco/css/less/defaults.less</default-less-configuration>

            <messages-object>Alfresco</messages-object>
            <packages>
                <package name="dojo"       location="js/lib/dojo-1.9.0/dojo"/>
                <package name="dijit"      location="js/lib/dojo-1.9.0/dijit"/>
                <package name="dojox"      location="js/lib/dojo-1.9.0/dojox"/>
                <package name="alfresco"   location="js/aikau/1.0/alfresco"/>
                <package name="myalfresco" location="js/myalfresco"/>
                <package name="cm"         location="js/lib/code-mirror"/>
                <package name="jquery"     location="js/lib/jquery-1.11.1" main="jquery-1.11.1.min"/>
                <package name="jqueryui"   location="js/lib/jquery-ui-1.11.1" main="jquery-ui.min"/>
            </packages>
         </dojo-pages>

      </web-framework>

   </config>

</alfresco-config>